{"version":3,"sources":["createAdventure.js"],"names":["TOGGLE_ADVENTURE_DELETING","toggleAdventureDeleting","type","TOGGLE_ADVENTURE_EDITING","toggleAdventureEditing","TOGGLE_ANALYTICS_DISPLAY","toggleAnalyticsDisplay","CREATE_ADVENTURE_REQUEST","createAdventureRequest","CREATE_ADVENTURE_SUCCESS","createAdventureSuccess","currentAdventure","GET_ADVENTURE_SUCCESS","getAdventureSuccess","CREATE_ADVENTURE_ERROR","createAdventureError","error","DELETE_ADVENTURE_REQUEST","deleteAdventureRequest","DELETE_ADVENTURE_SUCCESS","deleteAdventureSuccess","adventureId","DELETE_ADVENTURE_ERROR","deleteAdventureError","GET_ADVENTURE_BY_ID","getAdventureById","dispatch","getState","authToken","auth","fetch","API_BASE_URL","method","headers","Authorization","then","res","json","headNode","getHeadNodefromAdventure","catch","UPDATE_ADVENTURE_BY_ID","updateAdventureById","adventure","head","createAdventure","body","JSON","stringify","GET_ALL_ADVENTURES_REQUEST","getAllAdventuresRequest","GET_ALL_ADVENTURES_SUCCESS","getAllAdventuresSuccess","adventures","GET_ALL_ADVENTURES_ERROR","getAllAdventuresError","RERENDER_GRAPH","reRenderGraph","getAllAdventures","deleteAdventure","err","EDIT_ADVENTURE_REQUEST","editAdventureRequest","EDIT_ADVENTURE_SUCCESS","editAdventureSuccess","EDIT_ADVENTURE_ERROR","editAdventureError","editAdventure","id"],"mappings":";;;;;;;AACA;;AACA;;AACA;;AAEO,MAAMA,yBAAyB,GAAG,2BAAlC;;;AACA,MAAMC,uBAAuB,GAAG,OAAO;AAC5CC,EAAAA,IAAI,EAAEF;AADsC,CAAP,CAAhC;;;AAIA,MAAMG,wBAAwB,GAAG,0BAAjC;;;AACA,MAAMC,sBAAsB,GAAG,OAAO;AAC3CF,EAAAA,IAAI,EAAEC;AADqC,CAAP,CAA/B;;;AAIA,MAAME,wBAAwB,GAAG,0BAAjC;;;AACA,MAAMC,sBAAsB,GAAG,OAAO;AAC3CJ,EAAAA,IAAI,EAAEG;AADqC,CAAP,CAA/B;;;AAIA,MAAME,wBAAwB,GAAG,0BAAjC;;;AACA,MAAMC,sBAAsB,GAAG,OAAO;AAC3CN,EAAAA,IAAI,EAAEK;AADqC,CAAP,CAA/B;;;AAIA,MAAME,wBAAwB,GAAG,0BAAjC;;;AACA,MAAMC,sBAAsB,GAAIC,gBAAD,KAAuB;AAC3DT,EAAAA,IAAI,EAAEO,wBADqD;AAE3DE,EAAAA;AAF2D,CAAvB,CAA/B;;;AAKA,MAAMC,qBAAqB,GAAG,uBAA9B;;;AACA,MAAMC,mBAAmB,GAAIF,gBAAD,IAAsB;AAEvD,SAAQ;AACNT,IAAAA,IAAI,EAAEU,qBADA;AAEND,IAAAA;AAFM,GAAR;AAID,CANM;;;AAQA,MAAMG,sBAAsB,GAAG,wBAA/B;;;AACA,MAAMC,oBAAoB,GAAGC,KAAK,KAAK;AAC5Cd,EAAAA,IAAI,EAAEY,sBADsC;AAE5CE,EAAAA;AAF4C,CAAL,CAAlC;;;AAKA,MAAMC,wBAAwB,GAAG,0BAAjC;;;AACA,MAAMC,sBAAsB,GAAG,OAAO;AAC3ChB,EAAAA,IAAI,EAAEe;AADqC,CAAP,CAA/B;;;AAIA,MAAME,wBAAwB,GAAG,0BAAjC;;;AACA,MAAMC,sBAAsB,GAAIC,WAAD,KAAkB;AACtDnB,EAAAA,IAAI,EAAEiB,wBADgD;AAEtDE,EAAAA;AAFsD,CAAlB,CAA/B;;;AAKA,MAAMC,sBAAsB,GAAG,wBAA/B;;;AACA,MAAMC,oBAAoB,GAAGP,KAAK,KAAK;AAC5Cd,EAAAA,IAAI,EAAEoB,sBADsC;AAE5CN,EAAAA;AAF4C,CAAL,CAAlC;;;AAKA,MAAMQ,mBAAmB,GAAG,qBAA5B;;;AACA,MAAMC,gBAAgB,GAAGJ,WAAW,IAAI,CAACK,QAAD,EAAWC,QAAX,KAAwB;AACrED,EAAAA,QAAQ,CAAClB,sBAAsB,EAAvB,CAAR;AACA,QAAMoB,SAAS,GAAGD,QAAQ,GAAGE,IAAX,CAAgBD,SAAlC;AACA,SAAOE,KAAK,CAAE,GAAEC,oBAAa,cAAaV,WAAY,EAA1C,EAA6C;AACvDW,IAAAA,MAAM,EAAE,KAD+C;AAEvDC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,UAASN,SAAU;AAD5B;AAF8C,GAA7C,CAAL,CAMJO,IANI,CAMCC,GAAG,IAAI,oCAAwBA,GAAxB,CANR,EAOJD,IAPI,CAOCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPR,EAQJF,IARI,CAQCC,GAAG,IAAI;AACX,UAAME,QAAQ,GAAGC,wBAAwB,CAACH,GAAD,CAAzC;AACAV,IAAAA,QAAQ,CAAC,2BAAeY,QAAf,CAAD,CAAR;AACAZ,IAAAA,QAAQ,CAACb,mBAAmB,CAACuB,GAAD,CAApB,CAAR;AACD,GAZI,EAaJI,KAbI,CAaExB,KAAK,IAAI;AACd,WAAOU,QAAQ,CAACX,oBAAoB,CAACC,KAAD,CAArB,CAAf;AACD,GAfI,CAAP;AAgBD,CAnBM;;;AAqBA,MAAMyB,sBAAsB,GAAG,wBAA/B;;;AACA,MAAMC,mBAAmB,GAAGrB,WAAW,IAAI,CAACK,QAAD,EAAWC,QAAX,KAAwB;AACxED,EAAAA,QAAQ,CAAClB,sBAAsB,EAAvB,CAAR;AACA,QAAMoB,SAAS,GAAGD,QAAQ,GAAGE,IAAX,CAAgBD,SAAlC;AACA,SAAOE,KAAK,CAAE,GAAEC,oBAAa,cAAaV,WAAY,EAA1C,EAA6C;AACvDW,IAAAA,MAAM,EAAE,KAD+C;AAEvDC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,UAASN,SAAU;AAD5B;AAF8C,GAA7C,CAAL,CAMJO,IANI,CAMCC,GAAG,IAAI,oCAAwBA,GAAxB,CANR,EAOJD,IAPI,CAOCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPR,EAQJF,IARI,CAQCQ,SAAS,IAAI;AACjBjB,IAAAA,QAAQ,CAACb,mBAAmB,CAAC8B,SAAD,CAApB,CAAR;AACA,WAAOA,SAAP;AACD,GAXI,EAYJH,KAZI,CAYExB,KAAK,IAAI;AACd,WAAOU,QAAQ,CAACX,oBAAoB,CAACC,KAAD,CAArB,CAAf;AACD,GAdI,CAAP;AAeD,CAlBM,C,CAoBP;;;;;AACA,SAASuB,wBAAT,CAAkCI,SAAlC,EAA6C;AAC3C,QAAML,QAAQ,GAAGK,SAAS,CAACC,IAA3B;AACA,SAAON,QAAP;AACD;;AAEM,MAAMO,eAAe,GAAGF,SAAS,IAAI,CAACjB,QAAD,EAAWC,QAAX,KAAwB;AAClED,EAAAA,QAAQ,CAAClB,sBAAsB,EAAvB,CAAR;AACA,QAAMoB,SAAS,GAAGD,QAAQ,GAAGE,IAAX,CAAgBD,SAAlC;AACA,SAAOE,KAAK,CAAE,GAAEC,oBAAa,yBAAjB,EAA2C;AACrDC,IAAAA,MAAM,EAAE,MAD6C;AAErDC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,UAASN,SAAU,EAD5B;AAEP,sBAAgB;AAFT,KAF4C;AAMrDkB,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,SAAf;AAN+C,GAA3C,CAAL,CAQJR,IARI,CAQCC,GAAG,IAAI,oCAAwBA,GAAxB,CARR,EASJD,IATI,CASCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EATR,EAUJF,IAVI,CAUCC,GAAG,IAAI;AACX;AACA;AACA,WAAOV,QAAQ,CAAChB,sBAAsB,CAAC0B,GAAD,CAAvB,CAAf;AACD,GAdI,EAeJI,KAfI,CAeExB,KAAK,IAAI;AACd,WAAOU,QAAQ,CAACX,oBAAoB,CAACC,KAAD,CAArB,CAAf;AACD,GAjBI,CAAP;AAkBD,CArBM;;;AAuBA,MAAMiC,0BAA0B,GAAG,4BAAnC;;;AACA,MAAMC,uBAAuB,GAAG,OAAO;AAC5ChD,EAAAA,IAAI,EAAE+C;AADsC,CAAP,CAAhC;;;AAIA,MAAME,0BAA0B,GAAG,4BAAnC;;;AACA,MAAMC,uBAAuB,GAAGC,UAAU,KAAK;AACpDnD,EAAAA,IAAI,EAAEiD,0BAD8C;AAEpDE,EAAAA;AAFoD,CAAL,CAA1C;;;AAKA,MAAMC,wBAAwB,GAAG,0BAAjC;;;AACA,MAAMC,qBAAqB,GAAGvC,KAAK,KAAK;AAC7Cd,EAAAA,IAAI,EAAEoD,wBADuC;AAE7CtC,EAAAA;AAF6C,CAAL,CAAnC;;;AAKA,MAAMwC,cAAc,GAAG,iBAAvB;;;AACA,MAAMC,aAAa,GAAG,OAAO;AAClCvD,EAAAA,IAAI,EAAEsD;AAD4B,CAAP,CAAtB;;;;AAGA,MAAME,gBAAgB,GAAG,MAAM,CAAChC,QAAD,EAAWC,QAAX,KAAwB;AAC5DD,EAAAA,QAAQ,CAAClB,sBAAsB,EAAvB,CAAR;AACA,QAAMoB,SAAS,GAAGD,QAAQ,GAAGE,IAAX,CAAgBD,SAAlC;AACA,SAAOE,KAAK,CAAE,GAAEC,oBAAa,YAAjB,EAA8B;AACxCC,IAAAA,MAAM,EAAE,KADgC;AAExCC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,UAASN,SAAU;AAD5B;AAF+B,GAA9B,CAAL,CAMJO,IANI,CAMCC,GAAG,IAAI,oCAAwBA,GAAxB,CANR,EAOJD,IAPI,CAOCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPR,EAQJF,IARI,CAQCC,GAAG,IAAIV,QAAQ,CAAC0B,uBAAuB,CAAChB,GAAD,CAAxB,CARhB,EASJI,KATI,CASExB,KAAK,IAAI;AACdU,IAAAA,QAAQ,CAAC6B,qBAAqB,CAACvC,KAAD,CAAtB,CAAR;AACD,GAXI,CAAP;AAYD,CAfM;;;;AAiBA,MAAM2C,eAAe,GAAGtC,WAAW,IAAI,CAACK,QAAD,EAAWC,QAAX,KAAwB;AACpED,EAAAA,QAAQ,CAACR,sBAAsB,EAAvB,CAAR;AACA,QAAMU,SAAS,GAAGD,QAAQ,GAAGE,IAAX,CAAgBD,SAAlC;AACA,SAAOE,KAAK,CAAE,GAAEC,oBAAa,cAAaV,WAAY,GAA1C,EAA8C;AACxDW,IAAAA,MAAM,EAAE,QADgD;AAExDC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,UAASN,SAAU,EAD5B;AAEP,sBAAgB;AAFT;AAF+C,GAA9C,CAAL,CAOJO,IAPI,CAOCC,GAAG,IAAI,oCAAwBA,GAAxB,CAPR,EAQJD,IARI,CAQCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EARR,EASJF,IATI,CASCC,GAAG,IAAI;AACXV,IAAAA,QAAQ,CAACN,sBAAsB,EAAvB,CAAR;AACD,GAXI,EAYJoB,KAZI,CAYEoB,GAAG,IAAI;AACZlC,IAAAA,QAAQ,CAACH,oBAAoB,CAACqC,GAAD,CAArB,CAAR;AACD,GAdI,CAAP;AAeD,CAlBM;;;AAoBA,MAAMC,sBAAsB,GAAG,wBAA/B;;;AACA,MAAMC,oBAAoB,GAAG,OAAO;AACzC5D,EAAAA,IAAI,EAAE2D;AADmC,CAAP,CAA7B;;;AAIA,MAAME,sBAAsB,GAAG,wBAA/B;;;AACA,MAAMC,oBAAoB,GAAIrD,gBAAD,KAAuB;AACzDT,EAAAA,IAAI,EAAE6D,sBADmD;AAEzDpD,EAAAA;AAFyD,CAAvB,CAA7B;;;AAKA,MAAMsD,oBAAoB,GAAG,sBAA7B;;;AACA,MAAMC,kBAAkB,GAAGlD,KAAK,KAAK;AAC1Cd,EAAAA,IAAI,EAAE+D,oBADoC;AAE1CjD,EAAAA;AAF0C,CAAL,CAAhC;;;;AAKA,MAAMmD,aAAa,GAAGxB,SAAS,IAAI,CAACjB,QAAD,EAAWC,QAAX,KAAwB;AAChED,EAAAA,QAAQ,CAACoC,oBAAoB,EAArB,CAAR;AACA,MAAIM,EAAE,GAAGzC,QAAQ,GAAGgB,SAAX,CAAqBhC,gBAArB,CAAsCyD,EAA/C;AACA,QAAMxC,SAAS,GAAGD,QAAQ,GAAGE,IAAX,CAAgBD,SAAlC;AACA,SAAOE,KAAK,CAAE,GAAEC,oBAAa,cAAaqC,EAAG,EAAjC,EAAoC;AAC9CpC,IAAAA,MAAM,EAAE,KADsC;AAE9CC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,UAASN,SAAU,EAD5B;AAEP,sBAAgB;AAFT,KAFqC;AAM9CkB,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,SAAf;AANwC,GAApC,CAAL,CAQJR,IARI,CAQCC,GAAG,IAAI,oCAAwBA,GAAxB,CARR,EASJD,IATI,CASCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EATR,EAUJF,IAVI,CAUCC,GAAG,IAAI;AACX,UAAME,QAAQ,GAAGC,wBAAwB,CAACH,GAAD,CAAzC;AACAV,IAAAA,QAAQ,CAAC,2BAAeY,QAAf,CAAD,CAAR;AACA,WAAOZ,QAAQ,CAACsC,oBAAoB,CAAC5B,GAAD,CAArB,CAAf;AACD,GAdI,EAeJI,KAfI,CAeExB,KAAK,IAAI;AACd,WAAOU,QAAQ,CAACwC,kBAAkB,CAAClD,KAAD,CAAnB,CAAf;AACD,GAjBI,CAAP;AAkBD,CAtBM","sourcesContent":["\nimport { API_BASE_URL } from '../config';\nimport { normalizeResponseErrors } from '../utils';\nimport { setCurrentNode } from './nodes.js'\n\nexport const TOGGLE_ADVENTURE_DELETING = 'TOGGLE_ADVENTURE_DELETING';\nexport const toggleAdventureDeleting = () => ({\n  type: TOGGLE_ADVENTURE_DELETING\n});\n\nexport const TOGGLE_ADVENTURE_EDITING = 'TOGGLE_ADVENTURE_EDITING';\nexport const toggleAdventureEditing = () => ({\n  type: TOGGLE_ADVENTURE_EDITING\n});\n\nexport const TOGGLE_ANALYTICS_DISPLAY = 'TOGGLE_ANALYTICS_DISPLAY';\nexport const toggleAnalyticsDisplay = () => ({\n  type: TOGGLE_ANALYTICS_DISPLAY\n})\n\nexport const CREATE_ADVENTURE_REQUEST = 'CREATE_ADVENTURE_REQUEST';\nexport const createAdventureRequest = () => ({\n  type: CREATE_ADVENTURE_REQUEST,\n});\n\nexport const CREATE_ADVENTURE_SUCCESS = 'CREATE_ADVENTURE_SUCCESS';\nexport const createAdventureSuccess = (currentAdventure) => ({\n  type: CREATE_ADVENTURE_SUCCESS,\n  currentAdventure\n});\n\nexport const GET_ADVENTURE_SUCCESS = 'GET_ADVENTURE_SUCCESS';\nexport const getAdventureSuccess = (currentAdventure) => {\n\n  return ({\n    type: GET_ADVENTURE_SUCCESS,\n    currentAdventure\n  })\n};\n\nexport const CREATE_ADVENTURE_ERROR = 'CREATE_ADVENTURE_ERROR';\nexport const createAdventureError = error => ({\n  type: CREATE_ADVENTURE_ERROR,\n  error\n});\n\nexport const DELETE_ADVENTURE_REQUEST = 'DELETE_ADVENTURE_REQUEST';\nexport const deleteAdventureRequest = () => ({\n  type: DELETE_ADVENTURE_REQUEST,\n});\n\nexport const DELETE_ADVENTURE_SUCCESS = 'DELETE_ADVENTURE_SUCCESS';\nexport const deleteAdventureSuccess = (adventureId) => ({\n  type: DELETE_ADVENTURE_SUCCESS,\n  adventureId\n});\n\nexport const DELETE_ADVENTURE_ERROR = 'DELETE_ADVENTURE_ERROR';\nexport const deleteAdventureError = error => ({\n  type: DELETE_ADVENTURE_ERROR,\n  error\n});\n\nexport const GET_ADVENTURE_BY_ID = 'GET_ADVENTURE_BY_ID';\nexport const getAdventureById = adventureId => (dispatch, getState) => {\n  dispatch(createAdventureRequest());\n  const authToken = getState().auth.authToken;\n  return fetch(`${API_BASE_URL}/adventure/${adventureId}`, {\n    method: 'GET',\n    headers: {\n      Authorization: `Bearer ${authToken}`\n    },\n  })\n    .then(res => normalizeResponseErrors(res))\n    .then(res => res.json())\n    .then(res => {\n      const headNode = getHeadNodefromAdventure(res);\n      dispatch(setCurrentNode(headNode))\n      dispatch(getAdventureSuccess(res))\n    })\n    .catch(error => {\n      return dispatch(createAdventureError(error))\n    });\n}\n\nexport const UPDATE_ADVENTURE_BY_ID = 'UPDATE_ADVENTURE_BY_ID';\nexport const updateAdventureById = adventureId => (dispatch, getState) => {\n  dispatch(createAdventureRequest());\n  const authToken = getState().auth.authToken;\n  return fetch(`${API_BASE_URL}/adventure/${adventureId}`, {\n    method: 'GET',\n    headers: {\n      Authorization: `Bearer ${authToken}`\n    },\n  })\n    .then(res => normalizeResponseErrors(res))\n    .then(res => res.json())\n    .then(adventure => {\n      dispatch(getAdventureSuccess(adventure))\n      return adventure;\n    })\n    .catch(error => {\n      return dispatch(createAdventureError(error))\n    });\n}\n\n// helper function that gets the head node from newadventure object\nfunction getHeadNodefromAdventure(adventure) {\n  const headNode = adventure.head;\n  return headNode\n}\n\nexport const createAdventure = adventure => (dispatch, getState) => {\n  dispatch(createAdventureRequest());\n  const authToken = getState().auth.authToken;\n  return fetch(`${API_BASE_URL}/adventure/newAdventure`, {\n    method: 'POST',\n    headers: {\n      Authorization: `Bearer ${authToken}`,\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify(adventure)\n  })\n    .then(res => normalizeResponseErrors(res))\n    .then(res => res.json())\n    .then(res => {\n      // let headNode = getHeadNodefromAdventure(res)\n      // dispatch(setCurrentNode(headNode))\n      return dispatch(createAdventureSuccess(res))\n    })\n    .catch(error => {\n      return dispatch(createAdventureError(error))\n    });\n};\n\nexport const GET_ALL_ADVENTURES_REQUEST = 'GET_ALL_ADVENTURES_REQUEST';\nexport const getAllAdventuresRequest = () => ({\n  type: GET_ALL_ADVENTURES_REQUEST,\n});\n\nexport const GET_ALL_ADVENTURES_SUCCESS = 'GET_ALL_ADVENTURES_SUCCESS';\nexport const getAllAdventuresSuccess = adventures => ({\n  type: GET_ALL_ADVENTURES_SUCCESS,\n  adventures\n});\n\nexport const GET_ALL_ADVENTURES_ERROR = 'GET_ALL_ADVENTURES_ERROR';\nexport const getAllAdventuresError = error => ({\n  type: GET_ALL_ADVENTURES_ERROR,\n  error\n});\n\nexport const RERENDER_GRAPH = 'RERENDER_GRAPH ';\nexport const reRenderGraph = () => ({\n  type: RERENDER_GRAPH,\n});\nexport const getAllAdventures = () => (dispatch, getState) => {\n  dispatch(createAdventureRequest());\n  const authToken = getState().auth.authToken;\n  return fetch(`${API_BASE_URL}/adventure`, {\n    method: 'GET',\n    headers: {\n      Authorization: `Bearer ${authToken}`\n    }\n  })\n    .then(res => normalizeResponseErrors(res))\n    .then(res => res.json())\n    .then(res => dispatch(getAllAdventuresSuccess(res)))\n    .catch(error => {\n      dispatch(getAllAdventuresError(error))\n    });\n};\n\nexport const deleteAdventure = adventureId => (dispatch, getState) => {\n  dispatch(deleteAdventureRequest())\n  const authToken = getState().auth.authToken;\n  return fetch(`${API_BASE_URL}/adventure/${adventureId}/`, {\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${authToken}`,\n      'content-type': 'application/json'\n    }\n  })\n    .then(res => normalizeResponseErrors(res))\n    .then(res => res.json())\n    .then(res => {\n      dispatch(deleteAdventureSuccess())\n    })\n    .catch(err => {\n      dispatch(deleteAdventureError(err))\n    });\n};\n\nexport const EDIT_ADVENTURE_REQUEST = 'EDIT_ADVENTURE_REQUEST';\nexport const editAdventureRequest = () => ({\n  type: EDIT_ADVENTURE_REQUEST,\n});\n\nexport const EDIT_ADVENTURE_SUCCESS = 'EDIT_ADVENTURE_SUCCESS';\nexport const editAdventureSuccess = (currentAdventure) => ({\n  type: EDIT_ADVENTURE_SUCCESS,\n  currentAdventure\n});\n\nexport const EDIT_ADVENTURE_ERROR = 'EDIT_ADVENTURE_ERROR';\nexport const editAdventureError = error => ({\n  type: EDIT_ADVENTURE_ERROR,\n  error\n});\n\nexport const editAdventure = adventure => (dispatch, getState) => {\n  dispatch(editAdventureRequest());\n  let id = getState().adventure.currentAdventure.id;\n  const authToken = getState().auth.authToken;\n  return fetch(`${API_BASE_URL}/adventure/${id}`, {\n    method: 'PUT',\n    headers: {\n      Authorization: `Bearer ${authToken}`,\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify(adventure)\n  })\n    .then(res => normalizeResponseErrors(res))\n    .then(res => res.json())\n    .then(res => {\n      const headNode = getHeadNodefromAdventure(res);\n      dispatch(setCurrentNode(headNode))\n      return dispatch(editAdventureSuccess(res))\n    })\n    .catch(error => {\n      return dispatch(editAdventureError(error))\n    });\n};\n\n"]}