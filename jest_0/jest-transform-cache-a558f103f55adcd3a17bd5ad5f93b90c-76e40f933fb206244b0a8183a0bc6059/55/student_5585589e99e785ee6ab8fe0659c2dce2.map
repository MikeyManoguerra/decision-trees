{"version":3,"sources":["student.js"],"names":["GET_STUDENT_ADVENTURE_REQUEST","getStudentAdventureRequest","type","GET_STUDENT_ADVENTURE_SUCCESS","getStudentAdventureSuccess","adventure","GET_STUDENT_ADVENTURE_ERROR","getStudentAdventureError","error","END_STUDENT_ADVENTURE","endStudentAdventure","GET_STUDENT_CURRENTNODE_REQUEST","getStudentCurrentNodeRequest","GET_STUDENT_CURRENTNODE_SUCCESS","getStudentCurrentNodeSuccess","node","GET_STUDENT_CURRENTNODE_ERROR","getStudentCurrentNodeError","RESTART_STUDENT_ADVENTURE","restartStudentAdventure","GET_STUDENT_SEARCH_REQUEST","getStudentSearchRequest","GET_STUDENT_SEARCH_SUCCESS","getStudentSearchSuccess","results","GET_STUDENT_SEARCH_ERROR","getStudentSearchError","STUDENT_START_TUTORIAL","studentStartTutorial","STUDENT_NEXT_TUTORIAL","studentNextTutorial","tutorialPageNumber","STUDENT_PREVIOUS_TUTORIAL","studentPreviousTutorial","STUDENT_END_TUTORIAL","studentEndTutorial","getStudentAdventure","id","password","dispatch","console","log","fetch","API_BASE_URL","method","headers","body","JSON","stringify","then","res","json","catch","getStudentCurrentNode","adventureId","nodeId","getStudentAll","getStudentSearch","searchTerm"],"mappings":"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","sourcesContent":["import { API_BASE_URL } from '../config';\nimport { normalizeResponseErrors } from '../utils';\n\nexport const GET_STUDENT_ADVENTURE_REQUEST = 'GET_STUDENT_ADVENTURE_REQUEST';\nexport const getStudentAdventureRequest = () => ({\n  type: GET_STUDENT_ADVENTURE_REQUEST,\n});\n\nexport const GET_STUDENT_ADVENTURE_SUCCESS = 'GET_STUDENT_ADVENTURE_SUCCESS';\nexport const getStudentAdventureSuccess = adventure => ({\n  type: GET_STUDENT_ADVENTURE_SUCCESS,\n  adventure\n});\n\nexport const GET_STUDENT_ADVENTURE_ERROR = 'GET_STUDENT_ADVENTURE_ERROR';\nexport const getStudentAdventureError = error => ({\n  type: GET_STUDENT_ADVENTURE_ERROR,\n  error\n});\n\nexport const END_STUDENT_ADVENTURE = 'END_STUDENT_ADVENTURE';\nexport const endStudentAdventure = () => ({\n  type: END_STUDENT_ADVENTURE\n})\n\nexport const GET_STUDENT_CURRENTNODE_REQUEST = 'GET_STUDENT_CURRENTNODE_REQUEST';\nexport const getStudentCurrentNodeRequest = () => ({\n  type: GET_STUDENT_CURRENTNODE_REQUEST,\n});\n\nexport const GET_STUDENT_CURRENTNODE_SUCCESS = 'GET_STUDENT_CURRENTNODE_SUCCESS';\nexport const getStudentCurrentNodeSuccess = node => ({\n  type: GET_STUDENT_CURRENTNODE_SUCCESS,\n  node\n});\n\nexport const GET_STUDENT_CURRENTNODE_ERROR = 'GET_STUDENT_CURRENTNODE_ERROR';\nexport const getStudentCurrentNodeError = error => ({\n  type: GET_STUDENT_CURRENTNODE_ERROR,\n  error\n});\n\nexport const RESTART_STUDENT_ADVENTURE = 'RESTART_STUDENT_ADVENTURE'\nexport const restartStudentAdventure = () => ({\n  type: RESTART_STUDENT_ADVENTURE\n})\n\nexport const GET_STUDENT_SEARCH_REQUEST = 'GET_STUDENT_SEARCH_REQUEST';\nexport const getStudentSearchRequest = () => ({\n  type: GET_STUDENT_SEARCH_REQUEST,\n});\n\nexport const GET_STUDENT_SEARCH_SUCCESS = 'GET_STUDENT_SEARCH_SUCCESS';\nexport const getStudentSearchSuccess = results => ({\n  type: GET_STUDENT_SEARCH_SUCCESS,\n  results\n});\n\nexport const GET_STUDENT_SEARCH_ERROR = 'GET_STUDENT_SEARCH_ERROR';\nexport const getStudentSearchError = error => ({\n  type: GET_STUDENT_SEARCH_ERROR,\n  error\n});\n\nexport const STUDENT_START_TUTORIAL = 'STUDENT_START_TUTORIAL';\nexport const studentStartTutorial = () => ({\n  type: STUDENT_START_TUTORIAL\n});\n\nexport const STUDENT_NEXT_TUTORIAL = 'STUDENT_NEXT_TUTORIAL';\nexport const studentNextTutorial = tutorialPageNumber => ({\n  type: STUDENT_NEXT_TUTORIAL,\n  tutorialPageNumber\n});\n\nexport const STUDENT_PREVIOUS_TUTORIAL = 'STUDENT_PREVIOUS_TUTORIAL';\nexport const studentPreviousTutorial = tutorialPageNumber => ({\n  type: STUDENT_PREVIOUS_TUTORIAL,\n  tutorialPageNumber\n});\n\nexport const STUDENT_END_TUTORIAL = 'STUDENT_END_TUTORIAL';\nexport const studentEndTutorial = () => ({\n  type: STUDENT_END_TUTORIAL\n});\n\nexport const getStudentAdventure = (id, password) => (dispatch) => {\n  console.log('getStudentAdventure ran');\n  console.log(id);\n  dispatch(getStudentAdventureRequest());\n  return fetch(`${API_BASE_URL}/student/adventure/${id}`, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify({password})\n  })\n    .then(res => normalizeResponseErrors(res))\n    .then(res => res.json())\n    .then(res => dispatch(getStudentAdventureSuccess(res)))\n    .catch(error => {\n      dispatch(getStudentAdventureError(error))\n    });\n};\n\nexport const getStudentCurrentNode = (adventureId, nodeId) => (dispatch) => {\n  dispatch(getStudentCurrentNodeRequest());\n  return fetch(`${API_BASE_URL}/student/${adventureId}/${nodeId}`, {\n    method: 'GET'\n  })\n    .then(res => normalizeResponseErrors(res))\n    .then(res => res.json())\n    .then(res => {\n      dispatch(getStudentCurrentNodeSuccess(res))\n    })\n    .catch(error => {\n      dispatch(getStudentCurrentNodeError(error))\n    });\n};\n\nexport const getStudentAll = () => (dispatch) => {\n  dispatch(getStudentSearchRequest());\n  return fetch(`${API_BASE_URL}/student/search`, {\n    method: 'GET'\n  })\n    .then(res => {\n      return normalizeResponseErrors(res)\n    })\n    .then(res => {\n      return res.json()\n    })\n    .then(res => {\n      return dispatch(getStudentSearchSuccess(res))\n    })\n    .catch(error => {\n      return dispatch(getStudentSearchError(error));\n    })\n}\n\nexport const getStudentSearch = (searchTerm) => (dispatch) => {\n  dispatch(getStudentSearchRequest());\n  return fetch(`${API_BASE_URL}/student/search/${searchTerm}`, {\n    method: 'GET'\n  })\n    .then(res => {\n      return normalizeResponseErrors(res)\n    })\n    .then(res => {\n      return res.json()\n    })\n    .then(res => {\n      return dispatch(getStudentSearchSuccess(res))\n    })\n    .catch(error => {\n      return dispatch(getStudentSearchError(error));\n    })\n}"]}