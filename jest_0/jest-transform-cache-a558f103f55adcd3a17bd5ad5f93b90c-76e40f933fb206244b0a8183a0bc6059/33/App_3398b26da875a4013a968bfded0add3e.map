{"version":3,"sources":["App.js"],"names":["App","Component","componentDidUpdate","prevProps","loggedIn","props","startPeriodicRefresh","stopPeriodicRefresh","componentWillUnmount","refreshInterval","setInterval","dispatch","clearInterval","render","Home","GraphContainer","LandingPage","Login","CreateHeadNode","Dashboard","AdventureForm","AdventureBuilder","StudentLanding","AdventureInfo","WrongTurn","mapStateToProps","state","hasAuthToken","auth","authToken","currentUser"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;;;AAEA,MAAMA,GAAN,SAAkBC,gBAAlB,CAA4B;AAC1BC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAI,CAACA,SAAS,CAACC,QAAX,IAAuB,KAAKC,KAAL,CAAWD,QAAtC,EAAgD;AAC9C;AACA,WAAKE,oBAAL;AACD,KAHD,MAGO,IAAIH,SAAS,CAACC,QAAV,IAAsB,CAAC,KAAKC,KAAL,CAAWD,QAAtC,EAAgD;AACrD;AACA,WAAKG,mBAAL;AACD;AACF;;AACDC,EAAAA,oBAAoB,GAAG;AACrB,SAAKD,mBAAL;AACD;;AACDD,EAAAA,oBAAoB,GAAG;AACrB,SAAKG,eAAL,GAAuBC,WAAW,CAChC,MAAM,KAAKL,KAAL,CAAWM,QAAX,CAAoB,6BAApB,CAD0B,EAEhC,KAAK,EAAL,GAAU,IAFsB,CAEjB;AAFiB,KAAlC;AAID;;AACDJ,EAAAA,mBAAmB,GAAG;AACpB,QAAI,CAAC,KAAKE,eAAV,EAA2B;AACzB;AACD;;AACDG,IAAAA,aAAa,CAAC,KAAKH,eAAN,CAAb;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,6BAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,6BAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,6BAAC,qBAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEC,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,6BAAC,qBAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,iBAAlB;AAAoC,MAAA,SAAS,EAAEC,uBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,6BAAC,qBAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,eAAlB;AAAkC,MAAA,SAAS,EAAEC,oBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,6BAAC,qBAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,QAAlB;AAA2B,MAAA,SAAS,EAAEC,cAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE,6BAAC,qBAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,qBAAlB;AAAwC,MAAA,SAAS,EAAEC,uBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME,6BAAC,qBAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,YAAlB;AAA+B,MAAA,SAAS,EAAEC,kBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAOE,6BAAC,qBAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,YAAlB;AAA+B,MAAA,SAAS,EAAEC,qBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAQE,6BAAC,qBAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,iCAAlB;AAAoD,MAAA,SAAS,EAAEC,yBAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EASE,6BAAC,qBAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,iBAAlB;AAAoC,MAAA,SAAS,EAAEC,2BAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAUE,6BAAC,qBAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,gBAAlB;AAAmC,MAAA,SAAS,EAAEC,sBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAWE,6BAAC,qBAAD;AAAO,MAAA,SAAS,EAAEC,kBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CAFF,EAeE,6BAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,CADF;AAmBD;;AA9CyB;;AAiD5B,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCC,EAAAA,YAAY,EAAED,KAAK,CAACE,IAAN,CAAWC,SAAX,KAAyB,IADP;AAEhCzB,EAAAA,QAAQ,EAAEsB,KAAK,CAACE,IAAN,CAAWE,WAAX,KAA2B;AAFL,CAAL,CAA7B;;eAKe,gCAAW,yBAAQL,eAAR,EAAyBzB,GAAzB,CAAX,C","sourcesContent":["import React, { Component } from 'react';\nimport { Route, withRouter, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { refreshAuthToken } from './actions/auth';\nimport Headerbar from './components/headerbar.js';\nimport Login from './components/login.js';\nimport LandingPage from './components/landing-page';\nimport AdventureForm from './components/newAdventure'\nimport Dashboard from './components/dashboard'\nimport AdventureBuilder from './components/adventureBuilder'\n// import CombinedAdventure from './components/combinedAdventure'\nimport StudentLanding from './components/studentLandingPage'\nimport GraphContainer from './components/graph-container'\nimport WrongTurn from './components/wrongTurn'\nimport Home from './components/home'\nimport CreateHeadNode from './components/create-head-node'\nimport Footer from './components/footer'\n\nimport AdventureInfo from './components/adventureInfo'\nimport './App.css';\n\nclass App extends Component {\n  componentDidUpdate(prevProps) {\n    if (!prevProps.loggedIn && this.props.loggedIn) {\n      // When we are logged in, refresh the auth token periodically\n      this.startPeriodicRefresh();\n    } else if (prevProps.loggedIn && !this.props.loggedIn) {\n      // Stop refreshing when we log out\n      this.stopPeriodicRefresh();\n    }\n  }\n  componentWillUnmount() {\n    this.stopPeriodicRefresh();\n  }\n  startPeriodicRefresh() {\n    this.refreshInterval = setInterval(\n      () => this.props.dispatch(refreshAuthToken()),\n      60 * 60 * 1000 // One hour\n    );\n  }\n  stopPeriodicRefresh() {\n    if (!this.refreshInterval) {\n      return;\n    }\n    clearInterval(this.refreshInterval);\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Headerbar />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/GraphContainer\" component={GraphContainer} />\n          <Route exact path=\"/registration\" component={LandingPage} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/adventure/headnode\" component={CreateHeadNode} />\n          <Route exact path=\"/dashboard\" component={Dashboard} />\n          <Route exact path=\"/adventure\" component={AdventureForm} />\n          <Route exact path=\"/adventure/adventurebuilder/:id\" component={AdventureBuilder} />\n          <Route exact path=\"/studentlanding\" component={StudentLanding} />\n          <Route exact path=\"/adventure/:id\" component={AdventureInfo} />\n          <Route component={WrongTurn} />\n        </Switch>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  hasAuthToken: state.auth.authToken !== null,\n  loggedIn: state.auth.currentUser !== null\n});\n\nexport default withRouter(connect(mapStateToProps)(App));\n"]}