126da9b85b19ea78ac6b5fecb1baa1a5
"use strict";

var _interopRequireDefault = require("/home/flightlessbird/Thinkful/projects/CYOA/client-5NodeBodies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.CurrentNodeBrancher = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactRouterDom = require("react-router-dom");

var _reactRedux = require("react-redux");

var _nodes = require("../actions/nodes");

var _updateNodeForm = _interopRequireDefault(require("./update-node-form"));

var _jsxFileName = "/home/flightlessbird/Thinkful/projects/CYOA/client-5NodeBodies/src/components/current-node-brancher.js";

class CurrentNodeBrancher extends _react.default.Component {
  // if (!props.loggedIn) {
  //   return <Redirect to="/" />;
  // }
  defineParentPointerForNewNode(parentInt) {
    return this.props.dispatch((0, _nodes.nodeFormWithPointer)(parentInt));
  }

  editClicked() {
    let nodeId = this.props.currentNode.id;
    this.props.dispatch((0, _nodes.toggleUpdateForm)(nodeId));
  }

  render() {
    let answerA;
    let answerB;
    let answerC;
    let answerD;

    if (this.props.currentNode.answerA) {
      answerA = _react.default.createElement("div", {
        className: "brancher-answer-container",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 28
        },
        __self: this
      }, _react.default.createElement("div", {
        className: "brancher-answer",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 29
        },
        __self: this
      }, _react.default.createElement("p", {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 29
        },
        __self: this
      }, this.props.currentNode.answerA)), _react.default.createElement("div", {
        className: "brancher-pointer",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 30
        },
        __self: this
      }, this.props.currentNode.pointerA ? 'Already Accounted For!' : _react.default.createElement("button", {
        className: "new-branch brancher-button",
        value: "1",
        onClick: () => this.defineParentPointerForNewNode(1),
        __source: {
          fileName: _jsxFileName,
          lineNumber: 32
        },
        __self: this
      }, "New Branch")));
    }

    if (this.props.currentNode.answerB) {
      answerB = _react.default.createElement("div", {
        className: "brancher-answer-container",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 44
        },
        __self: this
      }, _react.default.createElement("div", {
        className: "brancher-answer",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 45
        },
        __self: this
      }, _react.default.createElement("p", {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 45
        },
        __self: this
      }, this.props.currentNode.answerB)), _react.default.createElement("div", {
        className: "brancher-pointer",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 46
        },
        __self: this
      }, this.props.currentNode.pointerB ? 'Already Accounted For!' : _react.default.createElement("button", {
        className: "new-branch brancher-button",
        value: "2",
        onClick: () => this.defineParentPointerForNewNode(2),
        __source: {
          fileName: _jsxFileName,
          lineNumber: 48
        },
        __self: this
      }, "New Branch")));
    }

    if (this.props.currentNode.answerC) {
      answerC = _react.default.createElement("div", {
        className: "brancher-answer-container",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 59
        },
        __self: this
      }, _react.default.createElement("div", {
        className: "brancher-answer",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 60
        },
        __self: this
      }, "  ", _react.default.createElement("p", {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 60
        },
        __self: this
      }, this.props.currentNode.answerC)), _react.default.createElement("div", {
        className: "brancher-pointer",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 61
        },
        __self: this
      }, this.props.currentNode.pointerC ? 'Already Accounted For!' : _react.default.createElement("button", {
        className: "new-branch brancher-button",
        value: "3",
        onClick: () => this.defineParentPointerForNewNode(3),
        __source: {
          fileName: _jsxFileName,
          lineNumber: 63
        },
        __self: this
      }, "NewBranch")));
    }

    if (this.props.currentNode.answerD) {
      answerD = _react.default.createElement("div", {
        className: "brancher-answer-container",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 73
        },
        __self: this
      }, _react.default.createElement("div", {
        className: "brancher-answer",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 74
        },
        __self: this
      }, " ", _react.default.createElement("p", {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 74
        },
        __self: this
      }, this.props.currentNode.answerD)), _react.default.createElement("div", {
        className: "brancher-pointer",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 75
        },
        __self: this
      }, this.props.currentNode.pointerD ? 'Already Accounted For!' : _react.default.createElement("button", {
        className: "new-branch brancher-button",
        value: "4",
        onClick: () => this.defineParentPointerForNewNode(4),
        __source: {
          fileName: _jsxFileName,
          lineNumber: 77
        },
        __self: this
      }, "NewBranch")));
    }

    let nodeTitle;

    if (this.props.currentNode.title) {
      nodeTitle = _react.default.createElement("h2", {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 90
        },
        __self: this
      }, "Current Node: ", this.props.currentNode.title);
    }

    if (!this.props.showUpdate) {
      return _react.default.createElement("div", {
        id: "current-node-brancher",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 95
        },
        __self: this
      }, _react.default.createElement("div", {
        className: "brancher-title",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 96
        },
        __self: this
      }, nodeTitle), _react.default.createElement("div", {
        className: "brancher-question",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 97
        },
        __self: this
      }, _react.default.createElement("h3", {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 98
        },
        __self: this
      }, this.props.currentNode.question)), answerA, answerB, answerC, answerD, _react.default.createElement("div", {
        className: "brancher-analytics",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 104
        },
        __self: this
      }, _react.default.createElement("button", {
        className: "edit-current-node",
        onClick: () => this.editClicked(),
        __source: {
          fileName: _jsxFileName,
          lineNumber: 106
        },
        __self: this
      }, "Edit This Node"), _react.default.createElement("p", {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 108
        },
        __self: this
      }, this.props.currentNode.count ? `This node has been visited ${this.props.currentNode.count} times` : "")));
    } else {
      return _react.default.createElement(_updateNodeForm.default, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 115
        },
        __self: this
      });
    }
  }

}

exports.CurrentNodeBrancher = CurrentNodeBrancher;

const mapStateToProps = (state, props) => ({
  loggedIn: state.auth.currentUser !== null,
  adventureId: state.adventure.adventureId,
  adventure: state.adventure.currentAdventure,
  currentNode: state.node.currentNode,
  showUpdate: state.node.showUpdate
});

var _default = (0, _reactRouterDom.withRouter)((0, _reactRedux.connect)(mapStateToProps)(CurrentNodeBrancher));

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,