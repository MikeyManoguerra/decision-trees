{"version":3,"sources":["student-display.js"],"names":["StudentDisplay","React","Component","updateNode","nodeId","props","dispatch","adventure","id","restart","adventureId","register","history","push","render","display","nodeVideo","nodeText","nodeQuestion","answerA","buttonA","answerB","buttonB","answerC","buttonC","answerD","buttonD","ending","currentNode","videoURL","videoPlay","textContent","question","pointerA","pointerB","pointerC","pointerD","title","creator","startContent","startVideoURL","head","mapStateToProps","state","student","error","loading","results"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  getStudentCurrentNode,\n  restartStudentAdventure,\n  getStudentAdventure\n} from '../actions/student'\nimport { Link } from 'react-router-dom'\n\nexport class StudentDisplay extends React.Component {\n\n  updateNode(nodeId) {\n    this.props.dispatch(getStudentCurrentNode(this.props.adventure.id, nodeId))\n  }\n\n  restart(adventureId) {\n    this.props.dispatch(restartStudentAdventure())\n    this.props.dispatch(getStudentAdventure(adventureId))\n  }\n\n  register() {\n    this.props.history.push(\"/\")\n  }\n\n  render() {\n    let display;\n    let nodeVideo;\n    let nodeText;\n    let nodeQuestion;\n    let answerA;\n    let buttonA;\n    let answerB;\n    let buttonB;\n    let answerC;\n    let buttonC;\n    let answerD;\n    let buttonD;\n    let ending;\n    if (this.props.currentNode) {\n\n      if (this.props.currentNode.videoURL) {\n        let videoPlay = this.props.currentNode.videoURL;\n        nodeVideo = (<iframe title='node-video' width=\"420\" height=\"315\" src={videoPlay}></iframe>)\n      }\n      if (this.props.currentNode.textContent) {\n        nodeText = <p>{this.props.currentNode.textContent}</p>\n      }\n      if (this.props.currentNode.question) {\n        nodeQuestion = <p>{this.props.currentNode.question}</p>\n      }\n      if (this.props.currentNode.answerA) {\n        answerA = <p>{this.props.currentNode.answerA}</p>\n        buttonA = <button onClick={() => this.updateNode(this.props.currentNode.pointerA)}>Submit</button>\n      }\n      if (this.props.currentNode.answerB) {\n        answerB = <p>{this.props.currentNode.answerB}</p>\n        buttonB = <button onClick={() => this.updateNode(this.props.currentNode.pointerB)}>Submit</button>\n      }\n      if (this.props.currentNode.answerC) {\n        answerC = <p>{this.props.currentNode.answerC}</p>\n        buttonC = <button onClick={() => this.updateNode(this.props.currentNode.pointerC)}>Submit</button>\n      }\n      if (this.props.currentNode.answerD) {\n        answerD = <p>{this.props.currentNode.answerD}</p>\n        buttonD = <button onClick={() => this.updateNode(this.props.currentNode.pointerD)}>Submit</button>\n      }\n      if (!this.props.currentNode.ending) {\n        display = (\n          <div>\n            {nodeVideo}\n            {nodeText}\n            {nodeQuestion}\n            {answerA}\n            {buttonA}\n            {answerB}\n            {buttonB}\n            {answerC}\n            {buttonC}\n            {answerD}\n            {buttonD}\n          </div>\n        )\n      } else {\n        display = (\n          <div>\n            {nodeVideo}\n            {nodeText}\n            <p>Congratulations! This is the end of your LearnVenture.</p>\n            <button className=\"return-to-start\" onClick={() => this.restart(this.props.adventure.id)}>Return to Start</button>\n            <p>If you'd like to create your own LearnVenture, <Link to='/registration'>click here</Link> to create an account</p>\n          </div>\n        )\n      }\n\n      return (\n\n        <div>\n          {display}\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          <h1>{this.props.adventure.title}</h1>\n          <p>Created by: {this.props.adventure.creator}</p>\n          <h2>{this.props.adventure.startContent}</h2>\n          <iframe title=\"starting-video\" width=\"420\" height=\"315\" src={this.props.adventure.startVideoURL}></iframe><br />\n          <button \n            className=\"embark-button\"\n            onClick={() => this.updateNode(this.props.adventure.head)}>Embark</button>\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    adventure: state.student.adventure,\n    error: state.student.error,\n    loading: state.student.loading,\n    currentNode: state.student.currentNode,\n    results: state.student.results\n  };\n};\n\nexport default connect(mapStateToProps)(StudentDisplay);\n"]}