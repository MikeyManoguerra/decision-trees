{"version":3,"sources":["graph-container.js"],"names":["GraphContainer","React","Component","constructor","props","handleResize","windowHeight","window","innerHeight","windowWidth","innerWidth","setState","state","onClickNode","nodeId","nodeArr","nodez","filter","node","id","dispatch","console","log","reRender","getFullNode","populateGraph","chartData","nodes","links","i","length","push","title","question","color","symbolType","pointerA","source","target","pointerB","pointerC","pointerD","ending","x","y","resizeGraph","cyStyle","margin","border","maxHeight","Math","max","maxWidth","componentDidMount","addEventListener","componentWillMount","componentWillUnmount","removeEventListener","render","myConfig","nodeHighlightBehavior","directed","automaticRearrangeAfterDropNode","d3","gravity","linkLength","forceManyBody","strength","minZoom","maxZoom","height","width","fontSize","size","highlightStrokeColor","labelProperty","highlightFontSize","link","highlightColor","strokeWidth","mapStateToProps","adventure","currentAdventure","showUpdate","currentNode"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Graph } from 'react-d3-graph';\nimport { setCurrentNode } from '../actions/nodes'\nimport { reRenderGraph } from '../actions/createAdventure'\n\n\nclass GraphContainer extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n          windowHeight: window.innerHeight,\n          windowWidth: window.innerWidth\n        };\n    }\n    onClickNode(nodeId) {\n        let nodeArr = this.props.nodez.filter((node) => node.id === nodeId)\n        this.props.dispatch(setCurrentNode(nodeArr[0]))\n        console.log(\"reRender is: \", this.props.reRender)\n        // this.props.dispatch(reRenderGraph())\n        }\n        \n\n    getFullNode(nodeId) { //get full node is outside of the class due to *this* being binded to the graph\n        const nodeArr = this.props.nodez.filter((node) => node.id === nodeId)\n        return nodeArr[0]\n    }\n\n    populateGraph() {\n        let chartData = {\n          nodes: [],\n          links: []\n        };\n        for (let i = 0; i < this.props.nodez.length; i++) {\n            if (i === 0) {\n                chartData.nodes.push({ id: this.props.nodez[i].id, title: this.props.nodez[i].title ? this.props.nodez[i].title : this.props.nodez[i].question, color: '#9D601B', symbolType: \"triangle\" })\n                if (this.props.nodez[i].pointerA) {\n                    chartData.links.push({ source: this.props.nodez[i].id, target: this.props.nodez[i].pointerA })\n                }\n                if (this.props.nodez[i].pointerB) {\n                    chartData.links.push({ source: this.props.nodez[i].id, target: this.props.nodez[i].pointerB })\n                }\n                if (this.props.nodez[i].pointerC) {\n                    chartData.links.push({ source: this.props.nodez[i].id, target: this.props.nodez[i].pointerC })\n                }\n                if (this.props.nodez[i].pointerD) {\n                    chartData.links.push({ source: this.props.nodez[i].id, target: this.props.nodez[i].pointerD })\n                }\n            } else {\n                chartData.nodes.push({ id: this.props.nodez[i].id, title: this.props.nodez[i].title ? this.props.nodez[i].title : this.props.nodez[i].question, color: this.props.nodez[i].ending ? '#51646b' : '#b4cedd', symbolType: this.props.nodez[i].ending ? \"square\" : \"circle\"})\n                if (this.props.nodez[i].pointerA) {\n                    chartData.links.push({ source: this.props.nodez[i].id, target: this.props.nodez[i].pointerA })\n                }\n                if (this.props.nodez[i].pointerB) {\n                    chartData.links.push({ source: this.props.nodez[i].id, target: this.props.nodez[i].pointerB })\n                }\n                if (this.props.nodez[i].pointerC) {\n                    chartData.links.push({ source: this.props.nodez[i].id, target: this.props.nodez[i].pointerC })\n                }\n                if (this.props.nodez[i].pointerD) {\n                    chartData.links.push({ source: this.props.nodez[i].id, target: this.props.nodez[i].pointerD })\n                }\n            }\n        }\n        chartData.nodes[0].x = this.state.windowWidth / 2;\n        chartData.nodes[0].y = this.state.windowHeight / 2;\n        return chartData;\n    }\n\n    resizeGraph(){\n        let cyStyle = {\n            margin: 'auto',\n            border: '1px solid lightgreen'\n        };\n        cyStyle.maxHeight = Math.max(this.state.windowHeight * .5, 500);\n        cyStyle.maxWidth = Math.max(this.state.windowWidth * .8, 300);\n        return cyStyle;\n    }\n\n    //if you change this from an arrow function, this.setState fails\n    handleResize = () => {\n        let windowHeight = window.innerHeight;\n        let windowWidth = window.innerWidth;\n        this.setState({\n            windowHeight,\n            windowWidth\n        })\n    }\n\n    componentDidMount(){\n      window.addEventListener(\"resize\", this.handleResize);\n    }\n\n    componentWillMount() {\n       this.populateGraph();\n       this.resizeGraph();\n    }\n\n    componentWillUnmount(){\n        window.removeEventListener(\"resize\", this.handleResize);\n    }\n\n    render() {\n        const myConfig = {\n            nodeHighlightBehavior: true,\n            directed: true,\n            automaticRearrangeAfterDropNode: true,\n            d3: {\n                gravity: -300,\n                linkLength: 120,\n                forceManyBody: function strength() {\n                    return -1000;\n                },\n            },\n            minZoom: .5,\n            maxZoom: 1.5,\n            height: Math.max(this.state.windowHeight * .5, 500),\n            width: Math.max(this.state.windowWidth * .8, 300),\n            //There are height and widths available here, but they're for the graph itself, not the container of the graph\n            node: {\n                fontSize: 18,\n                color: 'lightgreen',\n                size: 800,\n                highlightStrokeColor: 'blue',\n                labelProperty: 'title',\n                highlightFontSize: 'same'\n            },\n            link: {\n                highlightColor: 'lightblue',\n                strokeWidth: 4\n            }\n        };\n        if (!this.props.nodez) {\n            return <div>Loading....</div>\n        } else {\n            if (this.props.reRender) {\n                return (\n                <div style={this.resizeGraph()}> {/*Make the cyStyle into a method like populateGraph for CSS RESPONSIVENESS*/}\n                        <Graph\n                            props={this.props} \n                            id=\"graph-id\" // id is mandatory, if no id is defined rd3g will throw an error\n                            data={this.populateGraph()}\n                            config={myConfig}\n                            onClickNode={this.onClickNode}\n                        // onRightClickNode={onRightClickNode}\n                        // onClickGraph={onClickGraph}\n                        // onClickLink={onClickLink}\n                        // onRightClickLink={onRightClickLink}\n                        // onMouseOverNode={onMouseOverNode}\n                        // onMouseOutNode={onMouseOutNode}\n                        // onMouseOverLink={onMouseOverLink}\n                        // onMouseOutLink={onMouseOutLink}\n                        />\n                    </div>\n                );\n            } else {\n                return (\n                    <div style={this.resizeGraph()}>\n                        <Graph\n                            props={this.props}\n                            id=\"graph-id\" // id is mandatory, if no id is defined rd3g will throw an error\n                            data={this.populateGraph()}\n                            config={myConfig}\n                            onClickNode={this.onClickNode}\n                        // onRightClickNode={onRightClickNode}\n                        // onClickGraph={onClickGraph}\n                        // onClickLink={onClickLink}\n                        // onRightClickLink={onRightClickLink}\n                        // onMouseOverNode={onMouseOverNode}\n                        // onMouseOutNode={onMouseOutNode}\n                        // onMouseOverLink={onMouseOverLink}\n                        // onMouseOutLink={onMouseOutLink}\n                        />\n                    </div>\n                );\n            }\n        }\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    nodez: state.adventure.currentAdventure.nodes,\n    showUpdate: state.node.showUpdate,\n    currentNode: state.node.currentNode,\n    reRender : state.adventure.reRender\n})\n\n// connect(mapStateToProps)(Graph)\nexport default connect(mapStateToProps)(GraphContainer);"]}