{"version":3,"sources":["nodes.js"],"names":["NODE_FORM_WITH_POINTER","nodeFormWithPointer","parentInt","type","STAGE_CHILD_NODE","stageChildNode","node","TOGGLE_CHILD_TYPE","toggleChildType","SET_CURRENT_NODE","setCurrentNode","CREATE_NODE_REQUEST","createNodeRequest","CREATE_NODE_SUCCESS","createNodeSuccess","nodeId","CREATE_NODE_ERROR","createNodeError","error","TOGGLE_UPDATE_FORM","toggleUpdateForm","UPDATE_NODE_REQUEST","updateNodeRequest","UPDATE_NODE_SUCCESS","updateNodeSuccess","UPDATE_NODE_ERROR","updateNodeError","DELETE_NODE_REQUEST","deleteNodeRequest","DELETE_NODE_SUCCESS","deleteNodeSuccess","DELETE_NODE_ERROR","deleteNodeError","TOGGLE_NODE_DELETING","toggleNodeDeleting","TOGGLE_ENDING","toggleEnding","createNode","nodeData","dispatch","getState","authToken","auth","fetch","API_BASE_URL","method","headers","Authorization","body","JSON","stringify","then","res","json","parentId","createdNode","id","adventureId","adventure","updatedNode","getNodeFromCurrentAdventure","catch","err","deleteNode","head","linkNodesById","idObjectWithParentInt","updateNode","console","log","nodeToReturn","nodes","find"],"mappings":"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","sourcesContent":["\nimport { API_BASE_URL } from '../config';\nimport { normalizeResponseErrors } from '../utils';\nimport { updateAdventureById } from './createAdventure';\n\nexport const NODE_FORM_WITH_POINTER = 'NODE_FORM_WITH_POINTER';\nexport const nodeFormWithPointer = (parentInt) => {\n  return ({\n    type: NODE_FORM_WITH_POINTER,\n    parentInt,\n  })\n};\n\nexport const STAGE_CHILD_NODE = 'STAGE_CHILD_NODE';\nexport const stageChildNode = (node) => ({\n  type: STAGE_CHILD_NODE,\n  node,\n})\n\nexport const TOGGLE_CHILD_TYPE = 'TOGGLE_CHILD_TYPE';\nexport const toggleChildType = () => ({\n  type: TOGGLE_CHILD_TYPE\n})\n\n// set current node will now also normalize isEnding in state to it so they are in  sync\nexport const SET_CURRENT_NODE = 'SET_CURRENT_NODE';\nexport const setCurrentNode = (node) => ({\n  type: SET_CURRENT_NODE,\n  node,\n})\n\nexport const CREATE_NODE_REQUEST = 'CREATE_NODE_REQUEST';\nexport const createNodeRequest = () => ({\n  type: CREATE_NODE_REQUEST,\n});\n\nexport const CREATE_NODE_SUCCESS = 'CREATE_NODE_SUCCESS';\nexport const createNodeSuccess = (nodeId) => ({\n  type: CREATE_NODE_SUCCESS,\n  nodeId\n});\n\nexport const CREATE_NODE_ERROR = 'CREATE_NODE_ERROR';\nexport const createNodeError = error => ({\n  type: CREATE_NODE_ERROR,\n  error\n});\n\nexport const TOGGLE_UPDATE_FORM = 'TOGGLE_UPDATE_FORM';\nexport const toggleUpdateForm = (nodeId) => ({\n  type: TOGGLE_UPDATE_FORM,\n  nodeId\n});\n\nexport const UPDATE_NODE_REQUEST = 'UPDATE_NODE_REQUEST';\nexport const updateNodeRequest = () => ({\n  type: UPDATE_NODE_REQUEST,\n});\n\nexport const UPDATE_NODE_SUCCESS = 'UPDATE_NODE_SUCCESS';\nexport const updateNodeSuccess = (nodeId) => ({\n  type: UPDATE_NODE_SUCCESS,\n  nodeId\n});\n\nexport const UPDATE_NODE_ERROR = 'UPDATE_NODE_ERROR';\nexport const updateNodeError = error => ({\n  type: UPDATE_NODE_ERROR,\n  error\n});\n\nexport const DELETE_NODE_REQUEST = 'DELETE_NODE_REQUEST';\nexport const deleteNodeRequest = () => ({\n  type: DELETE_NODE_REQUEST,\n});\n\nexport const DELETE_NODE_SUCCESS = 'DELETE_NODE_SUCCESS';\nexport const deleteNodeSuccess = (nodeId) => ({\n  type: DELETE_NODE_SUCCESS,\n  nodeId\n});\n\nexport const DELETE_NODE_ERROR = 'DELETE_NODE_ERROR';\nexport const deleteNodeError = error => ({\n  type: DELETE_NODE_ERROR,\n  error\n});\n\nexport const TOGGLE_NODE_DELETING = 'TOGGLE_NODE_DELETING';\nexport const toggleNodeDeleting = () => ({\n  type: TOGGLE_NODE_DELETING\n});\n\nexport const TOGGLE_ENDING = 'TOGGLE_ENDING';\nexport const toggleEnding = () => ({\n  type: TOGGLE_ENDING\n});\n\nexport const createNode = nodeData => (dispatch, getState) => {\n  let nodeId;\n  dispatch(createNodeRequest())\n  const authToken = getState().auth.authToken;\n  return fetch(`${API_BASE_URL}/adventure/newNode`, {\n    method: 'POST',\n    headers: {\n      Authorization: `Bearer ${authToken}`,\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify(nodeData)\n  })\n    .then(res => normalizeResponseErrors(res))\n    .then(res => res.json())\n    .then(res => {\n      if (nodeData.parentId) {\n        nodeId = nodeData.parentId;\n      }\n      else nodeId = res.createdNode.id;\n      return dispatch(updateAdventureById(res.adventureId));\n    })\n    .then((adventure) => {\n      const updatedNode = getNodeFromCurrentAdventure(nodeId, adventure);\n      dispatch(setCurrentNode(updatedNode))\n      return dispatch(createNodeSuccess(nodeId));\n    })\n    .catch(err => {\n      dispatch(createNodeError(err));\n\n    });\n};\n\nexport const deleteNode = (adventureId, nodeId) => (dispatch, getState) => {\n  dispatch(deleteNodeRequest())\n  const authToken = getState().auth.authToken;\n  return fetch(`${API_BASE_URL}/adventure/${adventureId}/${nodeId}`, {\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${authToken}`,\n      'content-type': 'application/json'\n    }\n  })\n    .then(res => normalizeResponseErrors(res))\n    .then(() => {\n      return dispatch(updateAdventureById(adventureId))\n    })\n    .then((adventure) => {\n      dispatch(setCurrentNode(adventure.head))\n      return dispatch(deleteNodeSuccess())\n      // sets showUpdate to false in reducer\n    })\n    .catch(err => {\n      dispatch(deleteNodeError(err))\n    });\n};\n\n\nexport const linkNodesById = idObjectWithParentInt => (dispatch, getState) => {\n  let adventureId = idObjectWithParentInt.adventureId\n  let nodeId = idObjectWithParentInt.parentId\n  dispatch(updateNodeRequest())\n  const authToken = getState().auth.authToken;\n  return fetch(`${API_BASE_URL}/adventure/linkNodes`, {\n    method: 'POST',\n    headers: {\n      Authorization: `Bearer ${authToken}`,\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify(idObjectWithParentInt)\n  })\n    .then(() => {\n      return dispatch(updateAdventureById(adventureId));\n    })\n    .then((adventure) => {\n      const updatedNode = getNodeFromCurrentAdventure(nodeId, adventure);\n      dispatch(setCurrentNode(updatedNode))\n      return dispatch(updateNodeSuccess())\n    })\n    .catch(err => {\n      dispatch(createNodeError(err))\n    });\n}\n\n\nexport const updateNode = nodeData => (dispatch, getState) => {\n  let nodeId = nodeData.nodeId\n  dispatch(updateNodeRequest())\n  const authToken = getState().auth.authToken;\n  return fetch(`${API_BASE_URL}/adventure/${nodeData.adventureId}/${nodeData.nodeId}`, {\n    method: 'PUT',\n    headers: {\n      Authorization: `Bearer ${authToken}`,\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify(nodeData)\n  })\n    .then(res => normalizeResponseErrors(res))\n    .then( () => {\n      // console.log(\"New Node From Backend is: \", res)\n      // return dispatch(getAdventureById(node.adventureId));\n      dispatch(toggleUpdateForm())\n      return dispatch(updateAdventureById(nodeData.adventureId));\n    })\n    .then((adventure) => {\n      const updatedNode = getNodeFromCurrentAdventure(nodeId, adventure);\n      dispatch(setCurrentNode(updatedNode))\n      return dispatch(updateNodeSuccess())\n    })\n    .catch(err => {\n      dispatch(createNodeError(err))\n    });\n};\n\n// helper fn to find node in adventure\nfunction getNodeFromCurrentAdventure(nodeId, adventure) {\n  console.log(nodeId, adventure)\n  let nodeToReturn = adventure.nodes.find(node => node.id === nodeId);\n  console.log(nodeToReturn)\n  return nodeToReturn\n\n}\n\n\n// export const UPDATE_CURRENT_NODE = 'UPDATE_CURRENT_NODE';\n// export const updateCurrentNode = (nodeId, nodeArr) => ({\n//   type: UPDATE_CURRENT_NODE,\n//   nodeId,\n//   nodeArr\n// });"]}