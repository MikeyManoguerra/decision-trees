{"version":3,"sources":["dashboard.js"],"names":["Dashboard","React","Component","componentDidMount","props","dispatch","onboarding","adventures","toggleOnboardingClick","AdventureList","list","length","map","adventure","index","pathname","id","title","count","history","push","render","loading","mapStateToProps","state","currentUser","auth","username","name","firstName","lastName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport requiresLogin from './requires-login';\nimport { Link } from 'react-router-dom';\nimport { getAllAdventures } from '../actions/createAdventure'\nimport { toggleOnboarding } from '../actions/auth'\n\nexport class Dashboard extends React.Component {\n  componentDidMount() {\n    this.props.dispatch(getAllAdventures());\n    if (this.props.onboarding) {\n      this.props.dispatch(toggleOnboarding())\n    } else if (!(this.props.adventures && this.props.onboarding)) {\n      this.props.dispatch(toggleOnboarding())\n    }\n  }\n\n\n  toggleOnboardingClick() {\n    this.props.dispatch(toggleOnboarding())\n  }\n\n\n\n  AdventureList() {\n    let list;\n    if (this.props.adventures.length === 0) {\n      list = <ul>\n        <li>Your Adventures will display here!</li>\n        <li>Try making one with the button below!</li>\n      </ul>\n\n    } else {\n      list = this.props.adventures.map((adventure, index) => (\n        <li key={index}>\n          <Link\n            className=\"li-adventure\"\n            to={{\n              pathname: `/adventure/${adventure.id}`,\n            }}>{adventure.title}</Link>\n          <p>{adventure.count ? `This node has been visited ${adventure.count} times` : \"\"} </p>\n        </li>\n      ))\n    }\n\n    let onboarding;\n    if (this.props.onboarding) {\n      onboarding = <div className=\"dashboardOnboarding arrowBox_Top onboarding\">\n        <span>Welcome to LearnVenture! You can use the buttons in the navigation bar at the top of the page to <strong>Log Out</strong>,\n        get back here (the <strong>Dashboard</strong>), Or go to the <strong>Home page</strong>, where you can switch between building and embarking on\n                      LearnVentures. If you'd like help learning how to use this site, click \"Create LearnVenture\" above. Or close me\n      using the button below. You can turn help on and off on every page of the site to use when you need it!</span>\n        <button className=\"close-onboarding\" onClick={() => this.toggleOnboardingClick()}>Close</button>\n      </div>\n    } else {\n      onboarding = null\n    }\n    return (\n      <div className=\"dashboard\">\n        <ul className=\"adventures-list\" id=\"adventures\">\n          {list}\n        </ul>\n        <button className=\"create-adventure\" onClick={() => this.props.history.push('/adventure')}>Create new Adventure</button>\n        {onboarding}\n      </div>\n    );\n  }\n\n  render() {\n    if (this.props.loading) {\n      return <div className=\"loading\">loading...</div>;\n    }\n    return (\n      this.AdventureList()\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { currentUser } = state.auth;\n  // TO-DO ADD ADVENTURE STATE/STORE\n  return {\n    username: state.auth.currentUser.username,\n    name: `${currentUser.firstName} ${currentUser.lastName}`,\n    adventures: state.adventure.adventures,\n    onboarding: state.auth.onboarding\n  };\n};\n\nexport default requiresLogin()(connect(mapStateToProps)(Dashboard));\n"]}