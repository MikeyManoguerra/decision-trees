07dceec71151184590d2ead47ddd6a5c
"use strict";

var _interopRequireDefault = require("/home/flightlessbird/Thinkful/projects/CYOA/client-5NodeBodies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _reduxForm = require("redux-form");

var _input = _interopRequireDefault(require("./input"));

var _textarea = _interopRequireDefault(require("./textarea"));

var _createAdventure = require("../actions/createAdventure");

var _validators = require("../utils/validators");

var _reactRedux = require("react-redux");

var _semanticUiReact = require("semantic-ui-react");

var _jsxFileName = "/home/flightlessbird/Thinkful/projects/CYOA/client-5NodeBodies/src/components/editAdventureForm.js";

class EditAdventureForm extends _react.default.Component {
  constructor(...args) {
    super(...args);

    this.renderCheckBox = ({
      input,
      label
    }) => {
      return _react.default.createElement(_semanticUiReact.Form.Field, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 14
        },
        __self: this
      }, _react.default.createElement(_semanticUiReact.Checkbox, {
        autoFocus: true,
        label: label,
        checked: input.value ? true : false,
        onChange: (e, {
          checked
        }) => {
          input.onChange(checked);
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 15
        },
        __self: this
      }));
    };
  }

  toggleAdventureEditForm() {
    return this.props.dispatch((0, _createAdventure.toggleAdventureEditing)());
  }

  onSubmit(values) {
    let title = values.title,
        startContent = values.startContent,
        startVideoURL = values.startVideoURL,
        password = values.password,
        removePassword = values.removePassword;
    console.log(password);
    let adventure = {
      title,
      startContent,
      startVideoURL,
      password,
      removePassword
    };
    return this.props.dispatch((0, _createAdventure.editAdventure)(adventure)).then(() => this.toggleAdventureEditForm());
  }

  render() {
    let error;

    if (this.props.error) {
      error = _react.default.createElement("div", {
        className: "form-error",
        "aria-live": "polite",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 53
        },
        __self: this
      }, this.props.error);
    }

    return _react.default.createElement("div", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 58
      },
      __self: this
    }, _react.default.createElement("div", {
      className: "form-field",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 59
      },
      __self: this
    }, _react.default.createElement("form", {
      onSubmit: this.props.handleSubmit(values => this.onSubmit(values)),
      __source: {
        fileName: _jsxFileName,
        lineNumber: 60
      },
      __self: this
    }, _react.default.createElement("h2", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 61
      },
      __self: this
    }, "Edit Adventure Information"), error, _react.default.createElement(_reduxForm.Field, {
      className: "title input-field",
      label: "Adventure Title",
      ariaLabel: "adventure title",
      placeholder: "LearnVenture",
      name: "title",
      component: _input.default,
      type: "text",
      validate: [_validators.required, _validators.nonEmpty],
      __source: {
        fileName: _jsxFileName,
        lineNumber: 64
      },
      __self: this
    }), _react.default.createElement(_reduxForm.Field, {
      className: "startContent",
      label: "Adventure Introduction",
      ariaLabel: "Adventure Introduction",
      placeholder: "This is the beginning of your learning quest. Let's have some fun!",
      name: "startContent",
      component: _textarea.default,
      type: "text",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 73
      },
      __self: this
    }), _react.default.createElement(_reduxForm.Field, {
      className: "videoURL input-field",
      label: "Opening video URL(optional)",
      ariaLabel: "Opening video URL(optional)",
      placeholder: "https://www.youtube.com/embed/dHSQAEam2yc",
      name: "startVideoURL",
      component: _input.default // validate={url({ protocols: ['http', 'https'] })}
      ,
      type: "text",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 81
      },
      __self: this
    }), _react.default.createElement(_reduxForm.Field, {
      className: "textContent",
      label: "Optional Password:",
      ariaLabel: "Temporary",
      name: "password",
      component: _input.default,
      placeholder: "Not Required",
      type: "text",
      validate: [_validators.isTrimmedPassword],
      __source: {
        fileName: _jsxFileName,
        lineNumber: 90
      },
      __self: this
    }), _react.default.createElement(_reduxForm.Field, {
      className: "removePassword",
      name: "removePassword",
      label: "Remove Password",
      component: this.renderCheckBox,
      type: "checkbox",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 98
      },
      __self: this
    }), _react.default.createElement("button", {
      type: "submit",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 104
      },
      __self: this
    }, "Update Adventure"), _react.default.createElement("button", {
      onClick: () => this.toggleAdventureEditForm(),
      __source: {
        fileName: _jsxFileName,
        lineNumber: 105
      },
      __self: this
    }, "Cancel"))));
  }

}

const mapStateToProps = state => {
  return {
    adventureId: state.adventure.currentAdventure.id,
    initialValues: Object.assign({}, state.adventure.currentAdventure),
    isEditing: state.node.isEditing,
    isDeleting: state.node.isDeleting
  };
};

var _default = (0, _reactRedux.connect)(mapStateToProps)((0, _reduxForm.reduxForm)({
  form: 'Adventure',
  enableReinitialize: true // onSubmitFail: (errors, dispatch) =>
  //   dispatch(focus('Adventure'/*, Object.keys(errors)[0]*/
  //   ))

})(EditAdventureForm));

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,