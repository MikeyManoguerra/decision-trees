{"version":3,"sources":["newAdventure.js"],"names":["AdventureForm","React","Component","onSubmit","values","title","startContent","textContent","startVideoURL","password","console","log","adventure","props","dispatch","then","adventurez","history","push","render","error","handleSubmit","Input","required","nonEmpty","TextArea","isTrimmedPassword","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Field, reduxForm } from 'redux-form';\n// import { url } from 'redux-form-validators'\nimport Input from \"./input\";\nimport TextArea from \"./textarea\";\nimport { createAdventure } from '../actions/createAdventure';\nimport { required, nonEmpty, isTrimmedPassword } from \"../utils/validators\";\nimport { withRouter } from 'react-router-dom';\nimport Sidebar from \"./sidebar\";\n\nclass AdventureForm extends React.Component {\n  onSubmit(values) {\n    let { title,\n      startContent,\n      textContent,\n      startVideoURL,\n      password } = values;\n    console.log(password);\n    let adventure = {\n      title,\n      startContent,\n      textContent,\n      startVideoURL,\n      password\n    };\n    return this.props.dispatch(createAdventure(adventure))\n      .then(adventurez => {\n        console.log(\"adventure is\", adventurez)\n        this.props.history.push(`/adventure/headnode`)\n      })\n  }\n  render() {\n    let error;\n    if (this.props.error) {\n      error = (\n        <div className=\"form-error\" aria-live=\"polite\">\n          {this.props.error}\n        </div> \n      );\n    }\n    return (<div>\n      {/* <Sidebar /> */}\n      <div className=\"form-field\">\n        <Form onSubmit={this.props.handleSubmit(values => this.onSubmit(values))}>\n          <h2>Create a new adventure!</h2>\n          {error}\n          <Field\n            className=\"input-field\"\n            label=\"Adventure Title\"\n            ariaLabel=\"adventure title\"\n            placeholder=\"LearnVenture\"\n            name=\"title\"\n            component={Input}\n            type=\"text\"\n            validate={[required, nonEmpty]} />\n          <Field\n            className=\"text-area\"\n            label=\"Adventure Introduction\"\n            ariaLabel=\"Adventure Introduction\"\n            placeholder=\"This is the beginning of your learning quest. Let's have some fun!\"\n            name=\"startContent\"\n            component={TextArea}\n            type=\"text\" />\n          <Field\n            className=\"input-field\"\n            label=\"Opening video URL(optional)\"\n            ariaLabel=\"Opening video URL(optional)\"\n            placeholder=\"https://www.youtube.com/embed/dHSQAEam2yc\"\n            name=\"startVideoURL\"\n            component={Input}\n            // validate={url({ protocols: ['http', 'https'] })}\n            type=\"text\" />\n            <Field className=\"input-field\"\n              label=\"Optional Password:\"\n              ariaLabel=\"Temporary\"\n              name=\"password\"\n              component={Input}\n              placeholder=\"Not Required\"\n              type=\"text\"\n              validate={[isTrimmedPassword]} />\n          <button>New Adventure!</button>\n        </Form>\n      </div>\n    </div>\n    )\n  }\n}\n\nexport default withRouter(reduxForm({\n  form: 'Adventure',\n\n  // onSubmitFail: (errors, dispatch) =>\n  //   dispatch(focus('Adventure'/*, Object.keys(errors)[0]*/\n  //   ))\n})(AdventureForm));"]}