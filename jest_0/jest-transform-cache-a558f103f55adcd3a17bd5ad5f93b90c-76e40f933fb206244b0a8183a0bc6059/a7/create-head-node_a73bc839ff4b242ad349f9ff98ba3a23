41e77e47bf8bd6ea6077d1bddc163e34
"use strict";

var _interopRequireDefault = require("/home/flightlessbird/Thinkful/projects/CYOA/client-5NodeBodies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.CreateHeadNode = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactRouterDom = require("react-router-dom");

var _reactRedux = require("react-redux");

var _nodes = require("../actions/nodes");

var _reduxForm = require("redux-form");

var _textarea = _interopRequireDefault(require("./textarea"));

var _input = _interopRequireDefault(require("./input"));

var _validators = require("../utils/validators");

var _jsxFileName = "/home/flightlessbird/Thinkful/projects/CYOA/client-5NodeBodies/src/components/create-head-node.js";

class CreateHeadNode extends _react.default.Component {
  onSubmit(values) {
    const adventureId = this.props.adventureId;
    const nodeId = this.props.currentNodeId;
    const ending = false;
    let question = values.question,
        answerA = values.answerA,
        answerB = values.answerB,
        answerC = values.answerC,
        answerD = values.answerD,
        videoURL = values.videoURL,
        textContent = values.textContent,
        title = values.title;
    let newNode = {
      title,
      answerA,
      answerB,
      answerC,
      answerD,
      textContent,
      videoURL,
      question,
      adventureId,
      nodeId,
      ending
    };
    return this.props.dispatch((0, _nodes.createNode)(newNode)).then(() => {
      return this.props.history.push(`/adventure/adventurebuilder/${adventureId}`);
    });
  }

  render() {
    return _react.default.createElement("div", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 38
      },
      __self: this
    }, _react.default.createElement("h1", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 39
      },
      __self: this
    }, "Please create a head node for your adventure"), _react.default.createElement("div", {
      className: "questionAndAnswers",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 40
      },
      __self: this
    }, _react.default.createElement("form", {
      onSubmit: this.props.handleSubmit(values => this.onSubmit(values)),
      __source: {
        fileName: _jsxFileName,
        lineNumber: 41
      },
      __self: this
    }, _react.default.createElement(_reduxForm.Field, {
      className: "textContent",
      label: "Scenario Description",
      name: "textContent",
      component: _textarea.default,
      type: "text",
      validate: [_validators.required, _validators.nonEmpty],
      __source: {
        fileName: _jsxFileName,
        lineNumber: 42
      },
      __self: this
    }), _react.default.createElement(_reduxForm.Field, {
      className: "title input-field",
      label: "Title: ",
      name: "title",
      component: _input.default,
      type: "text",
      validate: [_validators.required, _validators.nonEmpty],
      __source: {
        fileName: _jsxFileName,
        lineNumber: 49
      },
      __self: this
    }), _react.default.createElement(_reduxForm.Field, {
      className: "videoURL input-field",
      label: "video URL :",
      name: "videoURL",
      component: _input.default,
      type: "text",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 56
      },
      __self: this
    }), _react.default.createElement(_reduxForm.Field, {
      className: "question input-field",
      label: "New Question",
      name: "question",
      component: _input.default,
      type: "text",
      validate: [_validators.required, _validators.nonEmpty],
      __source: {
        fileName: _jsxFileName,
        lineNumber: 62
      },
      __self: this
    }), _react.default.createElement(_reduxForm.Field, {
      className: "answer A input-field",
      label: "Answer A",
      name: "answerA",
      component: _input.default,
      type: "text",
      validate: [_validators.required, _validators.nonEmpty],
      __source: {
        fileName: _jsxFileName,
        lineNumber: 69
      },
      __self: this
    }), _react.default.createElement(_reduxForm.Field, {
      className: "answer B input-field",
      placeholder: "Optional",
      label: "Answer B",
      name: "answerB",
      component: _input.default,
      type: "text",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 76
      },
      __self: this
    }), _react.default.createElement(_reduxForm.Field, {
      className: "answer C input-field",
      placeholder: "Optional",
      label: "Answer C",
      name: "answerC",
      component: _input.default,
      type: "text",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 84
      },
      __self: this
    }), _react.default.createElement(_reduxForm.Field, {
      className: "answer D input-field",
      placeholder: "Optional",
      label: "Answer D",
      name: "answerD",
      component: _input.default,
      type: "text",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 92
      },
      __self: this
    }), _react.default.createElement("button", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 100
      },
      __self: this
    }, "New Node!"))));
  }

}

exports.CreateHeadNode = CreateHeadNode;

const mapStateToProps = (state, props) => ({
  adventureId: state.adventure.currentAdventure.id
});

var _default = (0, _reactRedux.connect)(mapStateToProps)((0, _reduxForm.reduxForm)({
  form: 'CreateHeadNode' // onSubmitFail: (errors, dispatch) =>
  //   dispatch(focus('Adventure'/*, Object.keys(errors)[0]*/
  //   ))

})(CreateHeadNode));

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,